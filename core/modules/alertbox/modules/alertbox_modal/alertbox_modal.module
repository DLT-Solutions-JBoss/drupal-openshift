<?php

/**
 * @file
 * Overrides some procedures to provide modal alertboxes.
 */

/**
 * Implements hook_theme().
 */
function alertbox_modal_theme($existing, $type, $theme, $path) {
  // We will use the our own template, using the default block preprocess.
  $existing['block__block_content__alertbox']['preprocess functions'][] = 'preprocess_alertbox_modal';
  return $existing;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Overrides alertbox admin settings to include a modal option.
 */
function alertbox_modal_form_alertbox_admin_settings_alter(&$form, &$form_state, $form_id) {
  $config = \Drupal::configFactory()->get('alertbox.settings');

  // Add a checkbox to enable/disable modal display on alertboxs.
  $form['alertbox_interface_options']['alertbox_show_modal'] = [
    '#type' => 'checkbox',
    '#title' => t('Display alert boxes on a modal overlay'),
    '#default_value' => $config->get('alertbox_show_modal'),
    '#description' => t('Check to show alertbox contents as modal overlay. 
                          All the alertboxes will be grouped in a single modal. 
                          <br />Note that if you also enable a close button, this modal will popup only once for each set of alertboxes.'),
  ];
}

/**
 * Processes variables to make them availble in the template.Adds library files.
 *
 * @param array $variables
 *   Values to pass to the template and rendering functions.
 */
function preprocess_alertbox_modal(array &$variables) {
  $config = \Drupal::configFactory()->get('alertbox.settings');
  // Let's add some default theming the alertbox.
  if ($config->get('alertbox_show_modal')) {

    // Default css to theme the alertbox block.
    $variables['#attached']['library'][] = 'alertbox_modal/alertbox_modal.interface';
    $variables['#attached']['drupalSettings']['alertbox_modal']['alertbox_allow_hide'] = $config->get('alertbox_allow_hide');

  }
}
